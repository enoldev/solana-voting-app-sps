// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";

export class InitializeCandidate {
  static encode(message: InitializeCandidate, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.candidateName);

    writer.uint32(16);
    writer.uint64(message.pollId);
  }

  static decode(reader: Reader, length: i32): InitializeCandidate {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new InitializeCandidate();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.candidateName = reader.string();
          break;

        case 2:
          message.pollId = reader.uint64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  candidateName: string;
  pollId: u64;

  constructor(candidateName: string = "", pollId: u64 = 0) {
    this.candidateName = candidateName;
    this.pollId = pollId;
  }
}
